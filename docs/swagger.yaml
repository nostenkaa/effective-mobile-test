basePath: /
definitions:
  models.Person:
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for enriching person data with age, gender, and nationality.
  title: Effective Mobile Test API
  version: "1.0"
paths:
  /people/:
    get:
      consumes:
      - application/json
      description: Get list of people, optionally filtered by name and surname, with
        pagination support
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by surname
        in: query
        name: surname
        type: string
      - default: 10
        description: Limit number of results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Person'
            type: array
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List people
      tags:
      - people
    post:
      consumes:
      - application/json
      description: Create a person with name, surname and optionally patronymic
      parameters:
      - description: Person data
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Person'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new person
      tags:
      - people
  /people/{id}:
    delete:
      consumes:
      - application/json
      description: Delete person by ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Person not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a person
      tags:
      - people
    put:
      consumes:
      - application/json
      description: Update person data by ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated person data
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Person'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Person not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a person
      tags:
      - people
swagger: "2.0"
